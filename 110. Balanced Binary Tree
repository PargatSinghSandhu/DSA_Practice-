/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isBalanced(TreeNode* root) {
        int res = height(root);
        {
            if(res==-1)
            {
                return false;
            }
            else
            {
                return true;
            }
        }


    }

    int height(TreeNode*root)
    {
        if(root==NULL)
        {
            return 0;
        }
        int leftheight = height(root->left);
        if(leftheight == -1)
        {
            return -1;
        }
        int rightheight = height(root->right);
        if(rightheight == -1)
        {
            return -1;
        }

        if(abs(leftheight-rightheight)>1)
        {
            return -1;
        }

        return 1+max(leftheight,rightheight);
    }
};
