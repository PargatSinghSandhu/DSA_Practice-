/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {

        vector<vector<int>> result;

        if(root==NULL)
        {
            return result;
        }

        queue<TreeNode*> zi_queue;
        zi_queue.push(root);
        bool lefttoright = true;

        while(!zi_queue.empty())
        {
            int size = zi_queue.size();
            vector <int> row(size);
            for(int i=0;i<size;i++)
            {
                TreeNode*node = zi_queue.front();
                zi_queue.pop();
                int index = (lefttoright)? i:(size-1-i);

                row[index]=node->val;
                if(node->left)
                {
                    zi_queue.push(node->left);
                }
                if(node->right)
                {
                    zi_queue.push(node->right);
                }
            }
            lefttoright =!lefttoright;
            result.push_back(row);
        }
        return result;
        
    }
};
