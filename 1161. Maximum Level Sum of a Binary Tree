/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {

        
        if(root==NULL)
        {
            return NULL;
        }

        queue<TreeNode*>q;
        q.push(root);
        int sum=INT_MIN;
        int level=0;
        int lev=0;
        

        while(!q.empty())

        {
            int size=q.size();
            vector<int> sub;
            int count=0;
            level++;
            
            
            for(int i=0;i<size;i++)
            {
                TreeNode*node=q.front();
                q.pop();
                if(node->left!=NULL)
                {
                    q.push(node->left);
                }
                if(node->right!=NULL)
                {
                    q.push(node->right);
                }
                count = count+(node->val);
                
            }
            
            if(count>sum)
            {
                sum=count;
                lev=level;
                cout<<sum<<level;
            }

        }
        return lev;
        
    }
};
